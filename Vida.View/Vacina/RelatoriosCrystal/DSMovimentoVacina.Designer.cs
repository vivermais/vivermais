//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3603
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Vida.View.Vacina.RelatoriosCrystal {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DSMovimentoVacina")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DSMovimentoVacina : global::System.Data.DataSet {
        
        private corpoDataTable tablecorpo;
        
        private cabecalhoDataTable tablecabecalho;
        
        private global::System.Data.DataRelation relationFK_corpo_cabecalho;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DSMovimentoVacina() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DSMovimentoVacina(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["corpo"] != null)) {
                    base.Tables.Add(new corpoDataTable(ds.Tables["corpo"]));
                }
                if ((ds.Tables["cabecalho"] != null)) {
                    base.Tables.Add(new cabecalhoDataTable(ds.Tables["cabecalho"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public corpoDataTable corpo {
            get {
                return this.tablecorpo;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public cabecalhoDataTable cabecalho {
            get {
                return this.tablecabecalho;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DSMovimentoVacina cln = ((DSMovimentoVacina)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["corpo"] != null)) {
                    base.Tables.Add(new corpoDataTable(ds.Tables["corpo"]));
                }
                if ((ds.Tables["cabecalho"] != null)) {
                    base.Tables.Add(new cabecalhoDataTable(ds.Tables["cabecalho"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tablecorpo = ((corpoDataTable)(base.Tables["corpo"]));
            if ((initTable == true)) {
                if ((this.tablecorpo != null)) {
                    this.tablecorpo.InitVars();
                }
            }
            this.tablecabecalho = ((cabecalhoDataTable)(base.Tables["cabecalho"]));
            if ((initTable == true)) {
                if ((this.tablecabecalho != null)) {
                    this.tablecabecalho.InitVars();
                }
            }
            this.relationFK_corpo_cabecalho = this.Relations["FK_corpo_cabecalho"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DSMovimentoVacina";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DSMovimentoVacina.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablecorpo = new corpoDataTable();
            base.Tables.Add(this.tablecorpo);
            this.tablecabecalho = new cabecalhoDataTable();
            base.Tables.Add(this.tablecabecalho);
            global::System.Data.ForeignKeyConstraint fkc;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_corpo_cabecalho", new global::System.Data.DataColumn[] {
                        this.tablecorpo.co_movimentoColumn}, new global::System.Data.DataColumn[] {
                        this.tablecabecalho.co_movimentoColumn});
            this.tablecabecalho.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            this.relationFK_corpo_cabecalho = new global::System.Data.DataRelation("FK_corpo_cabecalho", new global::System.Data.DataColumn[] {
                        this.tablecorpo.co_movimentoColumn}, new global::System.Data.DataColumn[] {
                        this.tablecabecalho.co_movimentoColumn}, false);
            this.Relations.Add(this.relationFK_corpo_cabecalho);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializecorpo() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializecabecalho() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DSMovimentoVacina ds = new DSMovimentoVacina();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void corpoRowChangeEventHandler(object sender, corpoRowChangeEvent e);
        
        public delegate void cabecalhoRowChangeEventHandler(object sender, cabecalhoRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class corpoDataTable : global::System.Data.TypedTableBase<corpoRow> {
            
            private global::System.Data.DataColumn columnvacina;
            
            private global::System.Data.DataColumn columnfabricante;
            
            private global::System.Data.DataColumn columnlote;
            
            private global::System.Data.DataColumn columnaplicacao;
            
            private global::System.Data.DataColumn columnvalidade;
            
            private global::System.Data.DataColumn columnquantidade;
            
            private global::System.Data.DataColumn columnco_item;
            
            private global::System.Data.DataColumn columnco_movimento;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public corpoDataTable() {
                this.TableName = "corpo";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal corpoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected corpoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn vacinaColumn {
                get {
                    return this.columnvacina;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fabricanteColumn {
                get {
                    return this.columnfabricante;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn loteColumn {
                get {
                    return this.columnlote;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn aplicacaoColumn {
                get {
                    return this.columnaplicacao;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn validadeColumn {
                get {
                    return this.columnvalidade;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn quantidadeColumn {
                get {
                    return this.columnquantidade;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn co_itemColumn {
                get {
                    return this.columnco_item;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn co_movimentoColumn {
                get {
                    return this.columnco_movimento;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public corpoRow this[int index] {
                get {
                    return ((corpoRow)(this.Rows[index]));
                }
            }
            
            public event corpoRowChangeEventHandler corpoRowChanging;
            
            public event corpoRowChangeEventHandler corpoRowChanged;
            
            public event corpoRowChangeEventHandler corpoRowDeleting;
            
            public event corpoRowChangeEventHandler corpoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddcorpoRow(corpoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public corpoRow AddcorpoRow(string vacina, string fabricante, string lote, string aplicacao, string validade, int quantidade, long co_item, long co_movimento) {
                corpoRow rowcorpoRow = ((corpoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        vacina,
                        fabricante,
                        lote,
                        aplicacao,
                        validade,
                        quantidade,
                        co_item,
                        co_movimento};
                rowcorpoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowcorpoRow);
                return rowcorpoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public corpoRow FindByco_item(long co_item) {
                return ((corpoRow)(this.Rows.Find(new object[] {
                            co_item})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                corpoDataTable cln = ((corpoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new corpoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnvacina = base.Columns["vacina"];
                this.columnfabricante = base.Columns["fabricante"];
                this.columnlote = base.Columns["lote"];
                this.columnaplicacao = base.Columns["aplicacao"];
                this.columnvalidade = base.Columns["validade"];
                this.columnquantidade = base.Columns["quantidade"];
                this.columnco_item = base.Columns["co_item"];
                this.columnco_movimento = base.Columns["co_movimento"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnvacina = new global::System.Data.DataColumn("vacina", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvacina);
                this.columnfabricante = new global::System.Data.DataColumn("fabricante", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfabricante);
                this.columnlote = new global::System.Data.DataColumn("lote", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlote);
                this.columnaplicacao = new global::System.Data.DataColumn("aplicacao", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaplicacao);
                this.columnvalidade = new global::System.Data.DataColumn("validade", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvalidade);
                this.columnquantidade = new global::System.Data.DataColumn("quantidade", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnquantidade);
                this.columnco_item = new global::System.Data.DataColumn("co_item", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnco_item);
                this.columnco_movimento = new global::System.Data.DataColumn("co_movimento", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnco_movimento);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnco_item}, true));
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint2", new global::System.Data.DataColumn[] {
                                this.columnco_movimento}, false));
                this.columnco_item.AllowDBNull = false;
                this.columnco_item.Unique = true;
                this.columnco_movimento.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public corpoRow NewcorpoRow() {
                return ((corpoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new corpoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(corpoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.corpoRowChanged != null)) {
                    this.corpoRowChanged(this, new corpoRowChangeEvent(((corpoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.corpoRowChanging != null)) {
                    this.corpoRowChanging(this, new corpoRowChangeEvent(((corpoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.corpoRowDeleted != null)) {
                    this.corpoRowDeleted(this, new corpoRowChangeEvent(((corpoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.corpoRowDeleting != null)) {
                    this.corpoRowDeleting(this, new corpoRowChangeEvent(((corpoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovecorpoRow(corpoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DSMovimentoVacina ds = new DSMovimentoVacina();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "corpoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class cabecalhoDataTable : global::System.Data.TypedTableBase<cabecalhoRow> {
            
            private global::System.Data.DataColumn columnco_movimento;
            
            private global::System.Data.DataColumn columnmotivo;
            
            private global::System.Data.DataColumn columntipomovimento;
            
            private global::System.Data.DataColumn columnsala;
            
            private global::System.Data.DataColumn columndata;
            
            private global::System.Data.DataColumn columnsituacao;
            
            private global::System.Data.DataColumn columnobservacao;
            
            private global::System.Data.DataColumn columnestabelecimentosaude;
            
            private global::System.Data.DataColumn columnresponsavelenvio;
            
            private global::System.Data.DataColumn columnresponsavelrecebimento;
            
            private global::System.Data.DataColumn columndataenvio;
            
            private global::System.Data.DataColumn columndatarecebimento;
            
            private global::System.Data.DataColumn columnsaladestino;
            
            private global::System.Data.DataColumn columnresponsavel;
            
            private global::System.Data.DataColumn columnnumero;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public cabecalhoDataTable() {
                this.TableName = "cabecalho";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal cabecalhoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected cabecalhoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn co_movimentoColumn {
                get {
                    return this.columnco_movimento;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn motivoColumn {
                get {
                    return this.columnmotivo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tipomovimentoColumn {
                get {
                    return this.columntipomovimento;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn salaColumn {
                get {
                    return this.columnsala;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dataColumn {
                get {
                    return this.columndata;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn situacaoColumn {
                get {
                    return this.columnsituacao;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn observacaoColumn {
                get {
                    return this.columnobservacao;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn estabelecimentosaudeColumn {
                get {
                    return this.columnestabelecimentosaude;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn responsavelenvioColumn {
                get {
                    return this.columnresponsavelenvio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn responsavelrecebimentoColumn {
                get {
                    return this.columnresponsavelrecebimento;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dataenvioColumn {
                get {
                    return this.columndataenvio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn datarecebimentoColumn {
                get {
                    return this.columndatarecebimento;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn saladestinoColumn {
                get {
                    return this.columnsaladestino;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn responsavelColumn {
                get {
                    return this.columnresponsavel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn numeroColumn {
                get {
                    return this.columnnumero;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public cabecalhoRow this[int index] {
                get {
                    return ((cabecalhoRow)(this.Rows[index]));
                }
            }
            
            public event cabecalhoRowChangeEventHandler cabecalhoRowChanging;
            
            public event cabecalhoRowChangeEventHandler cabecalhoRowChanged;
            
            public event cabecalhoRowChangeEventHandler cabecalhoRowDeleting;
            
            public event cabecalhoRowChangeEventHandler cabecalhoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddcabecalhoRow(cabecalhoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public cabecalhoRow AddcabecalhoRow(corpoRow parentcorpoRowByFK_corpo_cabecalho, string motivo, string tipomovimento, string sala, string data, string situacao, string observacao, string estabelecimentosaude, string responsavelenvio, string responsavelrecebimento, string dataenvio, string datarecebimento, string saladestino, string responsavel, long numero) {
                cabecalhoRow rowcabecalhoRow = ((cabecalhoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        motivo,
                        tipomovimento,
                        sala,
                        data,
                        situacao,
                        observacao,
                        estabelecimentosaude,
                        responsavelenvio,
                        responsavelrecebimento,
                        dataenvio,
                        datarecebimento,
                        saladestino,
                        responsavel,
                        numero};
                if ((parentcorpoRowByFK_corpo_cabecalho != null)) {
                    columnValuesArray[0] = parentcorpoRowByFK_corpo_cabecalho[7];
                }
                rowcabecalhoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowcabecalhoRow);
                return rowcabecalhoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public cabecalhoRow FindByco_movimento(long co_movimento) {
                return ((cabecalhoRow)(this.Rows.Find(new object[] {
                            co_movimento})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                cabecalhoDataTable cln = ((cabecalhoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new cabecalhoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnco_movimento = base.Columns["co_movimento"];
                this.columnmotivo = base.Columns["motivo"];
                this.columntipomovimento = base.Columns["tipomovimento"];
                this.columnsala = base.Columns["sala"];
                this.columndata = base.Columns["data"];
                this.columnsituacao = base.Columns["situacao"];
                this.columnobservacao = base.Columns["observacao"];
                this.columnestabelecimentosaude = base.Columns["estabelecimentosaude"];
                this.columnresponsavelenvio = base.Columns["responsavelenvio"];
                this.columnresponsavelrecebimento = base.Columns["responsavelrecebimento"];
                this.columndataenvio = base.Columns["dataenvio"];
                this.columndatarecebimento = base.Columns["datarecebimento"];
                this.columnsaladestino = base.Columns["saladestino"];
                this.columnresponsavel = base.Columns["responsavel"];
                this.columnnumero = base.Columns["numero"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnco_movimento = new global::System.Data.DataColumn("co_movimento", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnco_movimento);
                this.columnmotivo = new global::System.Data.DataColumn("motivo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmotivo);
                this.columntipomovimento = new global::System.Data.DataColumn("tipomovimento", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntipomovimento);
                this.columnsala = new global::System.Data.DataColumn("sala", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsala);
                this.columndata = new global::System.Data.DataColumn("data", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndata);
                this.columnsituacao = new global::System.Data.DataColumn("situacao", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsituacao);
                this.columnobservacao = new global::System.Data.DataColumn("observacao", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnobservacao);
                this.columnestabelecimentosaude = new global::System.Data.DataColumn("estabelecimentosaude", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnestabelecimentosaude);
                this.columnresponsavelenvio = new global::System.Data.DataColumn("responsavelenvio", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnresponsavelenvio);
                this.columnresponsavelrecebimento = new global::System.Data.DataColumn("responsavelrecebimento", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnresponsavelrecebimento);
                this.columndataenvio = new global::System.Data.DataColumn("dataenvio", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndataenvio);
                this.columndatarecebimento = new global::System.Data.DataColumn("datarecebimento", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndatarecebimento);
                this.columnsaladestino = new global::System.Data.DataColumn("saladestino", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsaladestino);
                this.columnresponsavel = new global::System.Data.DataColumn("responsavel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnresponsavel);
                this.columnnumero = new global::System.Data.DataColumn("numero", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnumero);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnco_movimento}, true));
                this.columnco_movimento.AllowDBNull = false;
                this.columnco_movimento.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public cabecalhoRow NewcabecalhoRow() {
                return ((cabecalhoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new cabecalhoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(cabecalhoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.cabecalhoRowChanged != null)) {
                    this.cabecalhoRowChanged(this, new cabecalhoRowChangeEvent(((cabecalhoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.cabecalhoRowChanging != null)) {
                    this.cabecalhoRowChanging(this, new cabecalhoRowChangeEvent(((cabecalhoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.cabecalhoRowDeleted != null)) {
                    this.cabecalhoRowDeleted(this, new cabecalhoRowChangeEvent(((cabecalhoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.cabecalhoRowDeleting != null)) {
                    this.cabecalhoRowDeleting(this, new cabecalhoRowChangeEvent(((cabecalhoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovecabecalhoRow(cabecalhoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DSMovimentoVacina ds = new DSMovimentoVacina();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "cabecalhoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class corpoRow : global::System.Data.DataRow {
            
            private corpoDataTable tablecorpo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal corpoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablecorpo = ((corpoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string vacina {
                get {
                    try {
                        return ((string)(this[this.tablecorpo.vacinaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'vacina\' in table \'corpo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecorpo.vacinaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string fabricante {
                get {
                    try {
                        return ((string)(this[this.tablecorpo.fabricanteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fabricante\' in table \'corpo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecorpo.fabricanteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string lote {
                get {
                    try {
                        return ((string)(this[this.tablecorpo.loteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'lote\' in table \'corpo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecorpo.loteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string aplicacao {
                get {
                    try {
                        return ((string)(this[this.tablecorpo.aplicacaoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'aplicacao\' in table \'corpo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecorpo.aplicacaoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string validade {
                get {
                    try {
                        return ((string)(this[this.tablecorpo.validadeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'validade\' in table \'corpo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecorpo.validadeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int quantidade {
                get {
                    try {
                        return ((int)(this[this.tablecorpo.quantidadeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'quantidade\' in table \'corpo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecorpo.quantidadeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long co_item {
                get {
                    return ((long)(this[this.tablecorpo.co_itemColumn]));
                }
                set {
                    this[this.tablecorpo.co_itemColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long co_movimento {
                get {
                    try {
                        return ((long)(this[this.tablecorpo.co_movimentoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'co_movimento\' in table \'corpo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecorpo.co_movimentoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsvacinaNull() {
                return this.IsNull(this.tablecorpo.vacinaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetvacinaNull() {
                this[this.tablecorpo.vacinaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfabricanteNull() {
                return this.IsNull(this.tablecorpo.fabricanteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfabricanteNull() {
                this[this.tablecorpo.fabricanteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsloteNull() {
                return this.IsNull(this.tablecorpo.loteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetloteNull() {
                this[this.tablecorpo.loteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsaplicacaoNull() {
                return this.IsNull(this.tablecorpo.aplicacaoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetaplicacaoNull() {
                this[this.tablecorpo.aplicacaoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsvalidadeNull() {
                return this.IsNull(this.tablecorpo.validadeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetvalidadeNull() {
                this[this.tablecorpo.validadeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsquantidadeNull() {
                return this.IsNull(this.tablecorpo.quantidadeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetquantidadeNull() {
                this[this.tablecorpo.quantidadeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isco_movimentoNull() {
                return this.IsNull(this.tablecorpo.co_movimentoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setco_movimentoNull() {
                this[this.tablecorpo.co_movimentoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public cabecalhoRow[] GetcabecalhoRows() {
                if ((this.Table.ChildRelations["FK_corpo_cabecalho"] == null)) {
                    return new cabecalhoRow[0];
                }
                else {
                    return ((cabecalhoRow[])(base.GetChildRows(this.Table.ChildRelations["FK_corpo_cabecalho"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class cabecalhoRow : global::System.Data.DataRow {
            
            private cabecalhoDataTable tablecabecalho;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal cabecalhoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablecabecalho = ((cabecalhoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long co_movimento {
                get {
                    return ((long)(this[this.tablecabecalho.co_movimentoColumn]));
                }
                set {
                    this[this.tablecabecalho.co_movimentoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string motivo {
                get {
                    try {
                        return ((string)(this[this.tablecabecalho.motivoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'motivo\' in table \'cabecalho\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecabecalho.motivoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tipomovimento {
                get {
                    try {
                        return ((string)(this[this.tablecabecalho.tipomovimentoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'tipomovimento\' in table \'cabecalho\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecabecalho.tipomovimentoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sala {
                get {
                    try {
                        return ((string)(this[this.tablecabecalho.salaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sala\' in table \'cabecalho\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecabecalho.salaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string data {
                get {
                    try {
                        return ((string)(this[this.tablecabecalho.dataColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'data\' in table \'cabecalho\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecabecalho.dataColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string situacao {
                get {
                    try {
                        return ((string)(this[this.tablecabecalho.situacaoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'situacao\' in table \'cabecalho\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecabecalho.situacaoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string observacao {
                get {
                    try {
                        return ((string)(this[this.tablecabecalho.observacaoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'observacao\' in table \'cabecalho\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecabecalho.observacaoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string estabelecimentosaude {
                get {
                    try {
                        return ((string)(this[this.tablecabecalho.estabelecimentosaudeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'estabelecimentosaude\' in table \'cabecalho\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecabecalho.estabelecimentosaudeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string responsavelenvio {
                get {
                    try {
                        return ((string)(this[this.tablecabecalho.responsavelenvioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'responsavelenvio\' in table \'cabecalho\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecabecalho.responsavelenvioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string responsavelrecebimento {
                get {
                    try {
                        return ((string)(this[this.tablecabecalho.responsavelrecebimentoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'responsavelrecebimento\' in table \'cabecalho\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecabecalho.responsavelrecebimentoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string dataenvio {
                get {
                    try {
                        return ((string)(this[this.tablecabecalho.dataenvioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dataenvio\' in table \'cabecalho\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecabecalho.dataenvioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string datarecebimento {
                get {
                    try {
                        return ((string)(this[this.tablecabecalho.datarecebimentoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'datarecebimento\' in table \'cabecalho\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecabecalho.datarecebimentoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string saladestino {
                get {
                    try {
                        return ((string)(this[this.tablecabecalho.saladestinoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'saladestino\' in table \'cabecalho\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecabecalho.saladestinoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string responsavel {
                get {
                    try {
                        return ((string)(this[this.tablecabecalho.responsavelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'responsavel\' in table \'cabecalho\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecabecalho.responsavelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long numero {
                get {
                    try {
                        return ((long)(this[this.tablecabecalho.numeroColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'numero\' in table \'cabecalho\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecabecalho.numeroColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public corpoRow corpoRow {
                get {
                    return ((corpoRow)(this.GetParentRow(this.Table.ParentRelations["FK_corpo_cabecalho"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_corpo_cabecalho"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmotivoNull() {
                return this.IsNull(this.tablecabecalho.motivoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmotivoNull() {
                this[this.tablecabecalho.motivoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstipomovimentoNull() {
                return this.IsNull(this.tablecabecalho.tipomovimentoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettipomovimentoNull() {
                this[this.tablecabecalho.tipomovimentoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssalaNull() {
                return this.IsNull(this.tablecabecalho.salaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsalaNull() {
                this[this.tablecabecalho.salaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdataNull() {
                return this.IsNull(this.tablecabecalho.dataColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdataNull() {
                this[this.tablecabecalho.dataColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssituacaoNull() {
                return this.IsNull(this.tablecabecalho.situacaoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsituacaoNull() {
                this[this.tablecabecalho.situacaoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsobservacaoNull() {
                return this.IsNull(this.tablecabecalho.observacaoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetobservacaoNull() {
                this[this.tablecabecalho.observacaoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsestabelecimentosaudeNull() {
                return this.IsNull(this.tablecabecalho.estabelecimentosaudeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetestabelecimentosaudeNull() {
                this[this.tablecabecalho.estabelecimentosaudeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsresponsavelenvioNull() {
                return this.IsNull(this.tablecabecalho.responsavelenvioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetresponsavelenvioNull() {
                this[this.tablecabecalho.responsavelenvioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsresponsavelrecebimentoNull() {
                return this.IsNull(this.tablecabecalho.responsavelrecebimentoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetresponsavelrecebimentoNull() {
                this[this.tablecabecalho.responsavelrecebimentoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdataenvioNull() {
                return this.IsNull(this.tablecabecalho.dataenvioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdataenvioNull() {
                this[this.tablecabecalho.dataenvioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdatarecebimentoNull() {
                return this.IsNull(this.tablecabecalho.datarecebimentoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdatarecebimentoNull() {
                this[this.tablecabecalho.datarecebimentoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssaladestinoNull() {
                return this.IsNull(this.tablecabecalho.saladestinoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsaladestinoNull() {
                this[this.tablecabecalho.saladestinoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsresponsavelNull() {
                return this.IsNull(this.tablecabecalho.responsavelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetresponsavelNull() {
                this[this.tablecabecalho.responsavelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnumeroNull() {
                return this.IsNull(this.tablecabecalho.numeroColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnumeroNull() {
                this[this.tablecabecalho.numeroColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class corpoRowChangeEvent : global::System.EventArgs {
            
            private corpoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public corpoRowChangeEvent(corpoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public corpoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class cabecalhoRowChangeEvent : global::System.EventArgs {
            
            private cabecalhoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public cabecalhoRowChangeEvent(cabecalhoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public cabecalhoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591