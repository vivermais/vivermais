//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Vida.View.Urgencia.RelatoriosCrystal {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DSRelAcolhimentoProntuario")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DSRelAcolhimentoProntuario : global::System.Data.DataSet {
        
        private AcolhimentoDataTable tableAcolhimento;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DSRelAcolhimentoProntuario() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DSRelAcolhimentoProntuario(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Acolhimento"] != null)) {
                    base.Tables.Add(new AcolhimentoDataTable(ds.Tables["Acolhimento"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AcolhimentoDataTable Acolhimento {
            get {
                return this.tableAcolhimento;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DSRelAcolhimentoProntuario cln = ((DSRelAcolhimentoProntuario)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Acolhimento"] != null)) {
                    base.Tables.Add(new AcolhimentoDataTable(ds.Tables["Acolhimento"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableAcolhimento = ((AcolhimentoDataTable)(base.Tables["Acolhimento"]));
            if ((initTable == true)) {
                if ((this.tableAcolhimento != null)) {
                    this.tableAcolhimento.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DSRelAcolhimentoProntuario";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DSRelAcolhimentoProntuario.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableAcolhimento = new AcolhimentoDataTable();
            base.Tables.Add(this.tableAcolhimento);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeAcolhimento() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DSRelAcolhimentoProntuario ds = new DSRelAcolhimentoProntuario();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void AcolhimentoRowChangeEventHandler(object sender, AcolhimentoRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AcolhimentoDataTable : global::System.Data.TypedTableBase<AcolhimentoRow> {
            
            private global::System.Data.DataColumn columnTensaoArterial;
            
            private global::System.Data.DataColumn columnFrequenciaCardiaca;
            
            private global::System.Data.DataColumn columnFrequenciaRespiratoria;
            
            private global::System.Data.DataColumn columnTemperatura;
            
            private global::System.Data.DataColumn columnHGT;
            
            private global::System.Data.DataColumn columnAcidente;
            
            private global::System.Data.DataColumn columnDorIntensa;
            
            private global::System.Data.DataColumn columnFratura;
            
            private global::System.Data.DataColumn columnConvulsao;
            
            private global::System.Data.DataColumn columnAlergia;
            
            private global::System.Data.DataColumn columnAsma;
            
            private global::System.Data.DataColumn columnDiarreia;
            
            private global::System.Data.DataColumn columnQueixaAcolhimento;
            
            private global::System.Data.DataColumn columnDorToraxica;
            
            private global::System.Data.DataColumn columnSaturacaoOxigenio;
            
            private global::System.Data.DataColumn columnProfissional;
            
            private global::System.Data.DataColumn columnDataAcolhimento;
            
            private global::System.Data.DataColumn columnClassificacaoRisco;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AcolhimentoDataTable() {
                this.TableName = "Acolhimento";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal AcolhimentoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected AcolhimentoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TensaoArterialColumn {
                get {
                    return this.columnTensaoArterial;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FrequenciaCardiacaColumn {
                get {
                    return this.columnFrequenciaCardiaca;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FrequenciaRespiratoriaColumn {
                get {
                    return this.columnFrequenciaRespiratoria;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TemperaturaColumn {
                get {
                    return this.columnTemperatura;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HGTColumn {
                get {
                    return this.columnHGT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AcidenteColumn {
                get {
                    return this.columnAcidente;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DorIntensaColumn {
                get {
                    return this.columnDorIntensa;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FraturaColumn {
                get {
                    return this.columnFratura;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConvulsaoColumn {
                get {
                    return this.columnConvulsao;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AlergiaColumn {
                get {
                    return this.columnAlergia;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AsmaColumn {
                get {
                    return this.columnAsma;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DiarreiaColumn {
                get {
                    return this.columnDiarreia;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QueixaAcolhimentoColumn {
                get {
                    return this.columnQueixaAcolhimento;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DorToraxicaColumn {
                get {
                    return this.columnDorToraxica;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaturacaoOxigenioColumn {
                get {
                    return this.columnSaturacaoOxigenio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProfissionalColumn {
                get {
                    return this.columnProfissional;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DataAcolhimentoColumn {
                get {
                    return this.columnDataAcolhimento;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClassificacaoRiscoColumn {
                get {
                    return this.columnClassificacaoRisco;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AcolhimentoRow this[int index] {
                get {
                    return ((AcolhimentoRow)(this.Rows[index]));
                }
            }
            
            public event AcolhimentoRowChangeEventHandler AcolhimentoRowChanging;
            
            public event AcolhimentoRowChangeEventHandler AcolhimentoRowChanged;
            
            public event AcolhimentoRowChangeEventHandler AcolhimentoRowDeleting;
            
            public event AcolhimentoRowChangeEventHandler AcolhimentoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddAcolhimentoRow(AcolhimentoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AcolhimentoRow AddAcolhimentoRow(
                        string TensaoArterial, 
                        string FrequenciaCardiaca, 
                        string FrequenciaRespiratoria, 
                        string Temperatura, 
                        string HGT, 
                        string Acidente, 
                        string DorIntensa, 
                        string Fratura, 
                        string Convulsao, 
                        string Alergia, 
                        string Asma, 
                        string Diarreia, 
                        string QueixaAcolhimento, 
                        string DorToraxica, 
                        string SaturacaoOxigenio, 
                        string Profissional, 
                        string DataAcolhimento, 
                        string ClassificacaoRisco) {
                AcolhimentoRow rowAcolhimentoRow = ((AcolhimentoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        TensaoArterial,
                        FrequenciaCardiaca,
                        FrequenciaRespiratoria,
                        Temperatura,
                        HGT,
                        Acidente,
                        DorIntensa,
                        Fratura,
                        Convulsao,
                        Alergia,
                        Asma,
                        Diarreia,
                        QueixaAcolhimento,
                        DorToraxica,
                        SaturacaoOxigenio,
                        Profissional,
                        DataAcolhimento,
                        ClassificacaoRisco};
                rowAcolhimentoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAcolhimentoRow);
                return rowAcolhimentoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                AcolhimentoDataTable cln = ((AcolhimentoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AcolhimentoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTensaoArterial = base.Columns["TensaoArterial"];
                this.columnFrequenciaCardiaca = base.Columns["FrequenciaCardiaca"];
                this.columnFrequenciaRespiratoria = base.Columns["FrequenciaRespiratoria"];
                this.columnTemperatura = base.Columns["Temperatura"];
                this.columnHGT = base.Columns["HGT"];
                this.columnAcidente = base.Columns["Acidente"];
                this.columnDorIntensa = base.Columns["DorIntensa"];
                this.columnFratura = base.Columns["Fratura"];
                this.columnConvulsao = base.Columns["Convulsao"];
                this.columnAlergia = base.Columns["Alergia"];
                this.columnAsma = base.Columns["Asma"];
                this.columnDiarreia = base.Columns["Diarreia"];
                this.columnQueixaAcolhimento = base.Columns["QueixaAcolhimento"];
                this.columnDorToraxica = base.Columns["DorToraxica"];
                this.columnSaturacaoOxigenio = base.Columns["SaturacaoOxigenio"];
                this.columnProfissional = base.Columns["Profissional"];
                this.columnDataAcolhimento = base.Columns["DataAcolhimento"];
                this.columnClassificacaoRisco = base.Columns["ClassificacaoRisco"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTensaoArterial = new global::System.Data.DataColumn("TensaoArterial", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTensaoArterial);
                this.columnFrequenciaCardiaca = new global::System.Data.DataColumn("FrequenciaCardiaca", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFrequenciaCardiaca);
                this.columnFrequenciaRespiratoria = new global::System.Data.DataColumn("FrequenciaRespiratoria", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFrequenciaRespiratoria);
                this.columnTemperatura = new global::System.Data.DataColumn("Temperatura", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTemperatura);
                this.columnHGT = new global::System.Data.DataColumn("HGT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHGT);
                this.columnAcidente = new global::System.Data.DataColumn("Acidente", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcidente);
                this.columnDorIntensa = new global::System.Data.DataColumn("DorIntensa", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDorIntensa);
                this.columnFratura = new global::System.Data.DataColumn("Fratura", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFratura);
                this.columnConvulsao = new global::System.Data.DataColumn("Convulsao", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConvulsao);
                this.columnAlergia = new global::System.Data.DataColumn("Alergia", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAlergia);
                this.columnAsma = new global::System.Data.DataColumn("Asma", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAsma);
                this.columnDiarreia = new global::System.Data.DataColumn("Diarreia", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiarreia);
                this.columnQueixaAcolhimento = new global::System.Data.DataColumn("QueixaAcolhimento", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQueixaAcolhimento);
                this.columnDorToraxica = new global::System.Data.DataColumn("DorToraxica", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDorToraxica);
                this.columnSaturacaoOxigenio = new global::System.Data.DataColumn("SaturacaoOxigenio", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaturacaoOxigenio);
                this.columnProfissional = new global::System.Data.DataColumn("Profissional", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProfissional);
                this.columnDataAcolhimento = new global::System.Data.DataColumn("DataAcolhimento", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDataAcolhimento);
                this.columnClassificacaoRisco = new global::System.Data.DataColumn("ClassificacaoRisco", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClassificacaoRisco);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AcolhimentoRow NewAcolhimentoRow() {
                return ((AcolhimentoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AcolhimentoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(AcolhimentoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AcolhimentoRowChanged != null)) {
                    this.AcolhimentoRowChanged(this, new AcolhimentoRowChangeEvent(((AcolhimentoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AcolhimentoRowChanging != null)) {
                    this.AcolhimentoRowChanging(this, new AcolhimentoRowChangeEvent(((AcolhimentoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AcolhimentoRowDeleted != null)) {
                    this.AcolhimentoRowDeleted(this, new AcolhimentoRowChangeEvent(((AcolhimentoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AcolhimentoRowDeleting != null)) {
                    this.AcolhimentoRowDeleting(this, new AcolhimentoRowChangeEvent(((AcolhimentoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveAcolhimentoRow(AcolhimentoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DSRelAcolhimentoProntuario ds = new DSRelAcolhimentoProntuario();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AcolhimentoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class AcolhimentoRow : global::System.Data.DataRow {
            
            private AcolhimentoDataTable tableAcolhimento;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal AcolhimentoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAcolhimento = ((AcolhimentoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TensaoArterial {
                get {
                    try {
                        return ((string)(this[this.tableAcolhimento.TensaoArterialColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TensaoArterial\' in table \'Acolhimento\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAcolhimento.TensaoArterialColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FrequenciaCardiaca {
                get {
                    try {
                        return ((string)(this[this.tableAcolhimento.FrequenciaCardiacaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FrequenciaCardiaca\' in table \'Acolhimento\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAcolhimento.FrequenciaCardiacaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FrequenciaRespiratoria {
                get {
                    try {
                        return ((string)(this[this.tableAcolhimento.FrequenciaRespiratoriaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FrequenciaRespiratoria\' in table \'Acolhimento\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAcolhimento.FrequenciaRespiratoriaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Temperatura {
                get {
                    try {
                        return ((string)(this[this.tableAcolhimento.TemperaturaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Temperatura\' in table \'Acolhimento\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAcolhimento.TemperaturaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HGT {
                get {
                    try {
                        return ((string)(this[this.tableAcolhimento.HGTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HGT\' in table \'Acolhimento\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAcolhimento.HGTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Acidente {
                get {
                    try {
                        return ((string)(this[this.tableAcolhimento.AcidenteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Acidente\' in table \'Acolhimento\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAcolhimento.AcidenteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DorIntensa {
                get {
                    try {
                        return ((string)(this[this.tableAcolhimento.DorIntensaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DorIntensa\' in table \'Acolhimento\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAcolhimento.DorIntensaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Fratura {
                get {
                    try {
                        return ((string)(this[this.tableAcolhimento.FraturaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fratura\' in table \'Acolhimento\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAcolhimento.FraturaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Convulsao {
                get {
                    try {
                        return ((string)(this[this.tableAcolhimento.ConvulsaoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Convulsao\' in table \'Acolhimento\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAcolhimento.ConvulsaoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Alergia {
                get {
                    try {
                        return ((string)(this[this.tableAcolhimento.AlergiaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Alergia\' in table \'Acolhimento\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAcolhimento.AlergiaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Asma {
                get {
                    try {
                        return ((string)(this[this.tableAcolhimento.AsmaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Asma\' in table \'Acolhimento\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAcolhimento.AsmaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Diarreia {
                get {
                    try {
                        return ((string)(this[this.tableAcolhimento.DiarreiaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Diarreia\' in table \'Acolhimento\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAcolhimento.DiarreiaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QueixaAcolhimento {
                get {
                    try {
                        return ((string)(this[this.tableAcolhimento.QueixaAcolhimentoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QueixaAcolhimento\' in table \'Acolhimento\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAcolhimento.QueixaAcolhimentoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DorToraxica {
                get {
                    try {
                        return ((string)(this[this.tableAcolhimento.DorToraxicaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DorToraxica\' in table \'Acolhimento\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAcolhimento.DorToraxicaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SaturacaoOxigenio {
                get {
                    try {
                        return ((string)(this[this.tableAcolhimento.SaturacaoOxigenioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SaturacaoOxigenio\' in table \'Acolhimento\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAcolhimento.SaturacaoOxigenioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Profissional {
                get {
                    try {
                        return ((string)(this[this.tableAcolhimento.ProfissionalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Profissional\' in table \'Acolhimento\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAcolhimento.ProfissionalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DataAcolhimento {
                get {
                    try {
                        return ((string)(this[this.tableAcolhimento.DataAcolhimentoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DataAcolhimento\' in table \'Acolhimento\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAcolhimento.DataAcolhimentoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClassificacaoRisco {
                get {
                    try {
                        return ((string)(this[this.tableAcolhimento.ClassificacaoRiscoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClassificacaoRisco\' in table \'Acolhimento\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAcolhimento.ClassificacaoRiscoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTensaoArterialNull() {
                return this.IsNull(this.tableAcolhimento.TensaoArterialColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTensaoArterialNull() {
                this[this.tableAcolhimento.TensaoArterialColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFrequenciaCardiacaNull() {
                return this.IsNull(this.tableAcolhimento.FrequenciaCardiacaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFrequenciaCardiacaNull() {
                this[this.tableAcolhimento.FrequenciaCardiacaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFrequenciaRespiratoriaNull() {
                return this.IsNull(this.tableAcolhimento.FrequenciaRespiratoriaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFrequenciaRespiratoriaNull() {
                this[this.tableAcolhimento.FrequenciaRespiratoriaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTemperaturaNull() {
                return this.IsNull(this.tableAcolhimento.TemperaturaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTemperaturaNull() {
                this[this.tableAcolhimento.TemperaturaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHGTNull() {
                return this.IsNull(this.tableAcolhimento.HGTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHGTNull() {
                this[this.tableAcolhimento.HGTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAcidenteNull() {
                return this.IsNull(this.tableAcolhimento.AcidenteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAcidenteNull() {
                this[this.tableAcolhimento.AcidenteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDorIntensaNull() {
                return this.IsNull(this.tableAcolhimento.DorIntensaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDorIntensaNull() {
                this[this.tableAcolhimento.DorIntensaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFraturaNull() {
                return this.IsNull(this.tableAcolhimento.FraturaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFraturaNull() {
                this[this.tableAcolhimento.FraturaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConvulsaoNull() {
                return this.IsNull(this.tableAcolhimento.ConvulsaoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConvulsaoNull() {
                this[this.tableAcolhimento.ConvulsaoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAlergiaNull() {
                return this.IsNull(this.tableAcolhimento.AlergiaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAlergiaNull() {
                this[this.tableAcolhimento.AlergiaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAsmaNull() {
                return this.IsNull(this.tableAcolhimento.AsmaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAsmaNull() {
                this[this.tableAcolhimento.AsmaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiarreiaNull() {
                return this.IsNull(this.tableAcolhimento.DiarreiaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiarreiaNull() {
                this[this.tableAcolhimento.DiarreiaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQueixaAcolhimentoNull() {
                return this.IsNull(this.tableAcolhimento.QueixaAcolhimentoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQueixaAcolhimentoNull() {
                this[this.tableAcolhimento.QueixaAcolhimentoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDorToraxicaNull() {
                return this.IsNull(this.tableAcolhimento.DorToraxicaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDorToraxicaNull() {
                this[this.tableAcolhimento.DorToraxicaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaturacaoOxigenioNull() {
                return this.IsNull(this.tableAcolhimento.SaturacaoOxigenioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaturacaoOxigenioNull() {
                this[this.tableAcolhimento.SaturacaoOxigenioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProfissionalNull() {
                return this.IsNull(this.tableAcolhimento.ProfissionalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProfissionalNull() {
                this[this.tableAcolhimento.ProfissionalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDataAcolhimentoNull() {
                return this.IsNull(this.tableAcolhimento.DataAcolhimentoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDataAcolhimentoNull() {
                this[this.tableAcolhimento.DataAcolhimentoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClassificacaoRiscoNull() {
                return this.IsNull(this.tableAcolhimento.ClassificacaoRiscoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClassificacaoRiscoNull() {
                this[this.tableAcolhimento.ClassificacaoRiscoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class AcolhimentoRowChangeEvent : global::System.EventArgs {
            
            private AcolhimentoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AcolhimentoRowChangeEvent(AcolhimentoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AcolhimentoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591